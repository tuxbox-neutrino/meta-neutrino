#!/bin/bash

# Copyright (C) 2023 Thilo Graf
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# --------------------------------------------------------------------------------
# Script to Unmount All WebDAV (davfs) Mounts
# --------------------------------------------------------------------------------
#
# Description:
#     This script is designed to unmount all mounted WebDAV (davfs) filesystems.
#     It addresses the specific behavior of davfs mounts, for which the standard
#     'umount' command might not always work as expected. This script iterates
#     through all mounted filesystems, identifies davfs mounts, and unmounts them.
#
# Usage:
#     Run this script as a user with sufficient privileges to unmount directories
#     (typically root). The script will list all davfs mount points and attempt
#     to unmount them. It will also provide a summary of the mounts that were
#     successfully unmounted or report if no davfs mounts were found.
#
# Note:
#     This script is a workaround for issues specific to davfs mounts. If future
#     updates to davfs or the underlying system resolve these issues, this script
#     may no longer be necessary. For updates or more information, visit:
#     https://github.com/tuxbox-neutrino
#
# --------------------------------------------------------------------------------


echo "Starting to unmount all davfs mounts."

# Initialize a counter for found davfs mounts
davfs_count=0

# Loop through all mounted filesystems and look for 'davfs'
mount | grep 'davfs' | while read -r line; do
	# Increment the counter
	davfs_count=$((davfs_count + 1))

	# Extract the mount point
	mount_point=$(echo $line | awk '{print $3}')

	# Debug output of the mount point
	echo "Found davfs mount point: $mount_point"

	# Perform the unmount
	if umount "$mount_point"; then
		echo "$mount_point successfully unmounted."
	else
		echo "Error unmounting $mount_point."
	fi
done

# Check if any davfs mounts were found
if [ $davfs_count -eq 0 ]; then
	echo "No davfs mounts found."
else
	echo "All davfs mounts ($davfs_count) successfully unmounted."
fi

exit 0
