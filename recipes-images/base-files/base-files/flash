#!/bin/bash

if [ $1 = 1 ]; then
        part=1
        kernel=2
        root=3
elif [ $1 = 2 ]; then
        part=2
        kernel=4
        root=5
elif [ $1 = 3 ]; then
        part=3
        kernel=6
        root=7
elif [ $1 = 4 ]; then
        part=4
        kernel=8
        root=9
fi

imagesource="https://tuxbox-images.de/images/hd51/neutrino-image_flash.zip"
imagebase="/media/HDD/service/image"
imagefile="$imagebase/hd51.zip"
rootdevice="$(sed -e 's/^.*root=//' -e 's/ .*$//' < /proc/cmdline)"

if  [ $1 -lt 1 ] || [ $1 -gt 4 ]; then
        printf '\n%s\n' "Choose a valid partition" && exit 1
fi

reset && read -n1 -s -r -p "Press y to continue..." key

if [ "$key" = 'y' ]; then
        reset
        if [ -z $2 ]; then
                imagedir="$imagebase/hd51"
                unpack="unzip -x $imagefile -d $imagebase"
                [ ! -e $imagebase ] && mkdir -p $imagebase
                space_available="$(df -Pk $imagebase | awk 'NR==2 {print $4}')"
                if [ $space_available -lt 1048576 ];then
                        printf '\n%s\n' "You need at least 1G of free space on your HDD" && exit 1
                fi
                curl $imagesource -o $imagefile || { printf '\n%s\n' "Downloading the image failed" ; exit 1; }
                printf '\n%s\n'
                [ -d $imagedir ] && rm -r $imagedir
                $unpack || { printf '\n%s\n' "Unpacking the image failed" ; exit 1; }
                [ -f $imagefile ] && rm $imagefile
        else
                imagedir="$2"
                space_available="$(df -Pk $imagedir | awk 'NR==2 {print $4}')"
                if [ ! -f $imagedir/neutrino-image-hd51.ext4.bz2 ]; then
                                printf '\n%s\n' "$2/neutrino-image-hd51.ext4.bz2 not found" && exit 1
                elif [ ! -f $imagedir/kernel.bin ]; then
                        printf '\n%s\n' "$2/kernel.bin not found" && exit 1
                elif [ $space_available -lt 1048576 ];then
                        printf '\n%s\n' "You need at least 1G of free space on your device" && exit 1
                fi
        fi

        printf '\n%s\n' "Flashing kernel into /dev/mmcblk0p$kernel"
        dd if=$imagedir/kernel.bin of=/dev/mmcblk0p$kernel bs=1M || { printf '\n%s\n' "Flashing the kernel failed" ; exit 1; }

        printf '\n%s\n' "Flashing rootfs into /dev/mmcblk0p$root"
        bzip2 -cd $imagedir/neutrino-image-hd51.ext4.bz2 | dd of=/dev/mmcblk0p$root bs=1M && sync || { printf '\n%s\n' "Flash successful ... please unplug manually" ; exit 1; }

        if [ $rootdevice = /dev/mmcblk0p$root ]; then
                printf '\n%s\n' "Flash successful"
                systemctl --force --force reboot
        else
                printf '\n%s\n' "Flash successful"
        fi
else
        printf '\n%s\n' "Flashing image into partition_"$part" aborted" && exit 1
fi

