#!/bin/bash

if [ $1 = 1 ]; then
        part=1
        kernel=2
        root=3
elif [ $1 = 2 ]; then
        part=2
        kernel=4
        root=5
elif [ $1 = 3 ]; then
        part=3
        kernel=6
        root=7
elif [ $1 = 4 ]; then
        part=4
        kernel=8
        root=9
fi

imagesource="https://tuxbox-images.de/images/hd51/neutrino-image_ofgwrite.zip"
imagebase="/media/HDD/service/image"
rootdevice="$(sed -e 's/^.*root=//' -e 's/ .*$//' < /proc/cmdline)"
unzip="unzip -x hd51.zip"
mkfs="mkfs.ext4 -F /dev/mmcblk0p$root"
mount="systemctl start mnt-partition_$part.automount"
umount="systemctl stop mnt-partition_$part.automount"
unzip="unzip -x hd51.zip"

if [ $rootdevice = /dev/mmcblk0p$root ]; then
        printf '%s\n' "Flashing into running partition is not supported" && exit 1
fi

reset && read -n1 -s -r -p "Press y to continue..." key

if [ "$key" = 'y' ]; then
        if  [ $1 -lt 1 ] || [ $1 -gt 4 ]; then
                printf '\n\n%s\n' "Choose a valid partition" && exit 1
        fi

        if [ -z $2 ]; then
                [ ! -e $imagebase ] && mkdir -p $imagebase
                curl $imagesource -o $imagebase/hd51.zip
                rm -r $imagebase/hd51
                cd $imagebase && $unzip
                rm $imagebase/hd51.zip
                imagedir="$imagebase/hd51"

        else
                imagedir="$2"
                if [ ! -f $imagedir/rootfs.tar.bz2 ]; then
                        printf '\n\n%s\n' "$2/rootfs.tar.bz2 not found" && exit 1
                elif [ ! -f $imagedir/kernel.bin ]; then
                        printf '\n\n%s\n' "$2/kernel.bin not found" && exit 1
                fi
        fi

dd="dd if=$imagedir/kernel.bin of=/dev/mmcblk0p$kernel bs=1M"
[ -e /bin/tar.tar ] && tar_extraopt="--checkpoint=.300"
tar="tar -xjf $imagedir/rootfs.tar.bz2 -C /mnt/partition_$part $tar_extraopt"

        printf '\n\n%s\n' "Flashing image into partition_"$part
        $dd             || { echo 'Flashing the kernel failed' ; exit 1; }
        $umount         || { echo 'unmounting /mnt/partition_$part failed' ; exit 1; }
        $mkfs           || { echo 'creating ext4 filesystem on /dev/mmcblk0p$root failed' ; exit 1; }
        $mount          || { echo 'mounting /mnt/partition_$part failed' ; exit 1; }
        $tar && sync    || { echo 'unpacking the rootfs failed' ; exit 1; }
        printf '\n%s\n' "Flash successful" && exit 0
else
        printf '\n%s\n' "Flashing image into partition_"$part" aborted" && exit 1
fi
