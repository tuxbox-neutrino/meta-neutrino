From b33e4e9ce708f54248df320f930264493c335197 Mon Sep 17 00:00:00 2001
From: Markus Volk <f_l_k@t-online.de>
Date: Tue, 21 Aug 2018 18:39:34 +0200
Subject: [PATCH] fix build

Signed-off-by: Markus Volk <f_l_k@t-online.de>
---
 lib/libmtd.c        |  8 ++++----
 lib/libmtd_legacy.c |  4 ++--
 libubi.c            | 16 ++++++++--------
 3 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/lib/libmtd.c b/lib/libmtd.c
index 7622532..fd72600 100644
--- a/lib/libmtd.c
+++ b/lib/libmtd.c
@@ -443,8 +443,8 @@ static int dev_node2num(struct libmtd *lib, const char *node, int *mtd_num)
 		return -1;
 	}
 
-	mjr = major(st.st_rdev);
-	mnr = minor(st.st_rdev);
+//	mjr = major(st.st_rdev);
+//	mnr = minor(st.st_rdev);
 
 	if (mtd_get_info((libmtd_t *)lib, &info))
 		return -1;
@@ -1390,8 +1390,8 @@ int mtd_probe_node(libmtd_t desc, const char *node)
 		return -1;
 	}
 
-	mjr = major(st.st_rdev);
-	mnr = minor(st.st_rdev);
+//	mjr = major(st.st_rdev);
+//	mnr = minor(st.st_rdev);
 
 	if (mtd_get_info((libmtd_t *)lib, &info))
 		return -1;
diff --git a/lib/libmtd_legacy.c b/lib/libmtd_legacy.c
index 3121da9..d63d7f7 100644
--- a/lib/libmtd_legacy.c
+++ b/lib/libmtd_legacy.c
@@ -251,8 +251,8 @@ int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd)
 	}
 
 	memset(mtd, '\0', sizeof(struct mtd_dev_info));
-	mtd->major = major(st.st_rdev);
-	mtd->minor = minor(st.st_rdev);
+//	mtd->major = major(st.st_rdev);
+//	mtd->minor = minor(st.st_rdev);
 
 	if (mtd->major != MTD_DEV_MAJOR) {
 		errno = EINVAL;
diff --git a/libubi.c b/libubi.c
index 1e08b7d..2c45b9c 100644
--- a/libubi.c
+++ b/libubi.c
@@ -380,8 +380,8 @@ static int vol_node2nums(struct libubi *lib, const char *node, int *dev_num,
 		return errmsg("\"%s\" is not a character device", node);
 	}
 
-	major = major(st.st_rdev);
-	minor = minor(st.st_rdev);
+	//major = major(st.st_rdev);
+	//minor = minor(st.st_rdev);
 
 	if (minor == 0) {
 		errno = EINVAL;
@@ -449,8 +449,8 @@ static int dev_node2num(struct libubi *lib, const char *node, int *dev_num)
 		return errmsg("\"%s\" is not a character device", node);
 	}
 
-	major = major(st.st_rdev);
-	minor = minor(st.st_rdev);
+//	major = major(st.st_rdev);
+//	minor = minor(st.st_rdev);
 
 	if (minor != 0) {
 		errno = EINVAL;
@@ -738,8 +738,8 @@ static int mtd_node_to_num(const char *mtd_dev_node)
 				  mtd_dev_node);
 	}
 
-	major = major(sb.st_rdev);
-	minor = minor(sb.st_rdev);
+//	major = major(sb.st_rdev);
+//	minor = minor(sb.st_rdev);
 
 	if (major != MTD_CHAR_MAJOR) {
 		errno = EINVAL;
@@ -878,8 +878,8 @@ int ubi_probe_node(libubi_t desc, const char *node)
 		return -1;
 	}
 
-	major = major(st.st_rdev);
-	minor = minor(st.st_rdev);
+//	major = major(st.st_rdev);
+//	minor = minor(st.st_rdev);
 
 	if (ubi_get_info((libubi_t *)lib, &info))
 		return -1;
-- 
2.13.3

